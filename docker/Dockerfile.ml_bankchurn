# Use the official Python 3.6 image as the base image
FROM python:3.9-slim

SHELL [ "/bin/bash", "--login", "-c" ]

# Install poetry
RUN pip install poetry==1.4.2

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

# Set the working directory inside the container
WORKDIR /app

# Copy poetry files
COPY ml_bankchurn/pyproject.toml ml_bankchurn/poetry.lock ./
RUN touch README.md

# Install any dependencies specified in the requirements file
RUN poetry install --only dev --no-root && rm -rf $POETRY_CACHE_DIR

# Copy rest of the project
COPY ml_bankchurn/data_science_bank_churn ./data_science_bank_churn

# Install any dependencies specified in the requirements file
RUN poetry install

# Expose the ports for each API (adjust the port numbers as needed)
EXPOSE 8000

# ENTRYPOINT ["poetry", "run", "python", "-m", "uvicorn", "--host", "0.0.0.0", "--port", "8000", "data_science_bank_churn.src.app:app"]

# Copy source code, models and necessary files
COPY ml_bankchurn/api ./api
COPY ml_bankchurn/main.py ./main.py
COPY ml_bankchurn/api_config.py ./api_config.py
COPY ml_bankchurn/config.py ./config.py
COPY ml_bankchurn/logger.py ./logger.py

# Command and entrypoinys
COPY ml_bankchurn/entrypoint.sh ./entrypoint.sh
RUN ["chmod", "+x", "./entrypoint.sh"]
ENTRYPOINT ["bash", "./entrypoint.sh"]
